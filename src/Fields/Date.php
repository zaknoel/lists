<?php

namespace Zak\Lists\Fields;

use Carbon\Carbon;

class Date extends Text
{
    public string $type = "date";
    public array $rules = [
        'date' => 'Неправильная дата'
    ];
    public bool $time = false;

    public function withTime(): static
    {
        $this->time = true;
        return $this;
    }
    public function getType(): string
    {
        return $this->time?'datetime-local':$this->type; // TODO: Change the autogenerated stub
    }

    public function beforeSave(mixed $attribute)
    {
        if ($this->beforeSaveCallback && is_callable($this->beforeSaveCallback)) {
            $attribute = call_user_func_array($this->beforeSaveCallback, $attribute);
        }

        return Carbon::make($attribute);
    }
    public function changeValue(mixed $value)
    {
        $format=$this->time?"Y-m-d H:i":'Y-m-d';
        return $value && $value instanceof Carbon?$value->format($format):$value; // TODO: Change the autogenerated stub
    }
    public function changeListValue($value){
        $format=$this->time?"d.m.Y | H:i":' d.m.Y';
        if($value instanceof Carbon){
            return "<span class='text-center'>".str_replace('|', "<br>", $value->format($format))."</span>";
        }elseif($value){
            return "<span class='text-center'>".str_replace('|', "<br>", date($format, strtotime($value)))."</span>";
        }
        return  $value;

    }
    public function changeDetailValue($value){
        return $this->changeListValue($value);
    }
}
