<?php

namespace Zak\Lists\Fields;

class Boolean extends Text
{
    public bool $searchable = false;
    public array $rules=[
        'boolean'=>'Неправильная значение'
    ];
    public int $width=12;
    public string $jsOptions="width:'100px'";

    public function componentName(): string
    {
        return "checkbox";
    }
    public function beforeSave(mixed $attribute)
    {
        if($this->beforeSaveCallback && is_callable($this->beforeSaveCallback)){
            $attribute=call_user_func_array($this->beforeSaveCallback, $attribute);
        }

        return (boolean)$attribute;
    }
    public function changeListValue($value){
        return $value?
            "<span class='badge text-bg-success'>Да</span>"
            :"<span class='badge text-bg-danger'>Нет</span>";
    }
    public function changeDetailValue(mixed $value)
    {
        return $this->changeListValue($value); // TODO: Change the autogenerated stub
    }
    public function filteredValue()
    {
        return implode(' | ', $this->filter_value); // TODO: Change the autogenerated stub
    }
    public function generateFilter($query)
    {
        $this->filter_value=[];

        if(request()?->has($this->attribute)){
            $v=explode("⚬", request()?->get($this->attribute, ''));
            if($v){
                if(in_array("1", $v)){
                    $this->filter_value[1]="Да";
                }
                if(in_array("0", $v)){
                    $this->filter_value[0]="Нет";
                }
                $query->whereIn($this->attribute, array_keys($this->filter_value));
            }
        }
    }

}
